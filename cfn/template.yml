AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Slack Notifier stack'

Parameters:

  SlackChannel:
    Description: 'The Slack channel the notifications will be sent to'
    Type: String
    Default: 'aws-notification-demo'

  SlackWebhookUrl:
    Description: 'The Slack 2ebhook URL the function will send our notifications to'
    Type: String
    NoEcho: true

Resources:

  SlackTokenSecret:
    Type: AWS::SecretsManager::Secret
    Properties: 
      Description: 'Slack Webhook url used to post messages to Slack'
      SecretString: !Ref SlackWebhookUrl

  NotifierLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: notifier.handler
      CodeUri: ../src
      Runtime: python3.7
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          channel: !Ref SlackChannel
          webhook_sm_arn: !Ref SlackTokenSecret

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: 'NotifierLambdaPolicy'
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - secretsmanager:GetSecretValue
            - sns:Subscribe
            Resource: '*'
    
  NotifierSnsTopic:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: 'Slack Notifier'
      TopicName: 'SlackNotifier'
      Subscription:
        - Protocol: lambda
          Endpoint: !GetAtt NotifierLambda.Arn
